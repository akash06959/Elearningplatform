# Generated by Django 5.1.7 on 2025-04-02 14:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='achievement_icons/')),
                ('points', models.IntegerField(default=0)),
                ('criteria', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
            },
        ),
        migrations.CreateModel(
            name='ContentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.IntegerField(default=0)),
                ('average_time_spent', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('engagement_score', models.FloatField(default=0.0)),
                ('difficulty_rating', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content_analytics', to='courses.lesson')),
            ],
            options={
                'verbose_name': 'Content Analytics',
                'verbose_name_plural': 'Content Analytics',
            },
        ),
        migrations.CreateModel(
            name='CourseAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_enrollments', models.IntegerField(default=0)),
                ('active_students', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('average_grade', models.FloatField(default=0.0)),
                ('average_time_spent', models.IntegerField(default=0)),
                ('student_engagement_score', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('course', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_analytics', to='courses.course')),
            ],
            options={
                'verbose_name': 'Course Analytics',
                'verbose_name_plural': 'Course Analytics',
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('current_course_index', models.IntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('courses', models.ManyToManyField(related_name='learning_paths', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Learning Path',
                'verbose_name_plural': 'Learning Paths',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('course', 'Course Report'), ('student', 'Student Report'), ('content', 'Content Report'), ('engagement', 'Engagement Report'), ('completion', 'Completion Report')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('parameters', models.JSONField(default=dict)),
                ('data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_achievements', to='analytics.achievement')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Achievement',
                'verbose_name_plural': 'Student Achievements',
                'unique_together': {('student', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='StudentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_spent', models.IntegerField(default=0)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('quiz_scores', models.JSONField(default=dict)),
                ('assignment_scores', models.JSONField(default=dict)),
                ('engagement_score', models.FloatField(default=0.0)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk')], default='low', max_length=20)),
                ('predicted_completion', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_analytics', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Analytics',
                'verbose_name_plural': 'Student Analytics',
                'unique_together': {('student', 'course')},
            },
        ),
    ]
