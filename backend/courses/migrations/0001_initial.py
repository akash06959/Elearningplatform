# Generated by Django 5.1.7 on 2025-04-02 14:21

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CourseTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('content_type', models.CharField(choices=[('video', 'Video'), ('text', 'Text'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('file', 'File'), ('audio', 'Audio'), ('interactive', 'Interactive Content')], max_length=20)),
                ('content', models.JSONField(blank=True, default=dict)),
                ('order', models.IntegerField(default=0)),
                ('duration', models.IntegerField(default=30, help_text='Duration in minutes')),
                ('is_published', models.BooleanField(default=False)),
                ('allow_comments', models.BooleanField(default=True)),
                ('allow_download', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='course_thumbnails/')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('enrollment_type', models.CharField(choices=[('self', 'Self Enrollment'), ('manual', 'Manual Enrollment'), ('group', 'Group Enrollment')], default='self', max_length=20)),
                ('max_students', models.IntegerField(blank=True, null=True)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('estimated_duration', models.IntegerField(default=60, help_text='Duration in minutes')),
                ('language', models.CharField(default='en', max_length=10)),
                ('certificate_available', models.BooleanField(default=False)),
                ('certificate_template', models.FileField(blank=True, null=True, upload_to='certificate_templates/')),
                ('course_objectives', models.TextField(blank=True)),
                ('target_audience', models.TextField(blank=True)),
                ('course_features', models.JSONField(blank=True, default=list)),
                ('course_requirements', models.TextField(blank=True)),
                ('course_resources', models.JSONField(blank=True, default=list)),
                ('course_schedule', models.JSONField(blank=True, default=dict)),
                ('analytics_enabled', models.BooleanField(default=True)),
                ('discussion_enabled', models.BooleanField(default=True)),
                ('peer_review_enabled', models.BooleanField(default=False)),
                ('auto_grade_enabled', models.BooleanField(default=True)),
                ('proctoring_enabled', models.BooleanField(default=False)),
                ('offline_access_enabled', models.BooleanField(default=False)),
                ('mobile_compatible', models.BooleanField(default=True)),
                ('accessibility_features', models.JSONField(blank=True, default=list)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('duration_in_weeks', models.IntegerField(default=1)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='course_covers/')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='courses.category')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_taught', to=settings.AUTH_USER_MODEL)),
                ('prerequisites', models.ManyToManyField(blank=True, to='courses.course')),
                ('tags', models.ManyToManyField(to='courses.coursetag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('max_score', models.IntegerField(default=100)),
                ('submission_type', models.CharField(choices=[('text', 'Text'), ('file', 'File'), ('link', 'Link'), ('code', 'Code')], default='text', max_length=20)),
                ('instructions', models.TextField(blank=True)),
                ('rubric', models.JSONField(blank=True, default=dict)),
                ('allow_late_submissions', models.BooleanField(default=False)),
                ('late_submission_penalty', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='courses.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('time_limit', models.IntegerField(blank=True, help_text='Time limit in minutes', null=True)),
                ('passing_score', models.IntegerField(default=70)),
                ('max_attempts', models.IntegerField(default=1)),
                ('shuffle_questions', models.BooleanField(default=True)),
                ('show_correct_answers', models.BooleanField(default=False)),
                ('questions', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='courses.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')])),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('release_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_duration', models.IntegerField(default=60, help_text='Duration in minutes')),
                ('completion_criteria', models.JSONField(blank=True, default=dict)),
                ('resources', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='courses.module')),
                ('prerequisites', models.ManyToManyField(blank=True, to='courses.section')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.section'),
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='courses.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['title'], name='courses_cou_title_6e78a2_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['instructor'], name='courses_cou_instruc_d2e347_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['is_published'], name='courses_cou_is_publ_4b99b9_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['difficulty_level'], name='courses_cou_difficu_c299bd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='module',
            unique_together={('course', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('course', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together={('module', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('section', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='userprogress',
            unique_together={('user', 'lesson')},
        ),
    ]
